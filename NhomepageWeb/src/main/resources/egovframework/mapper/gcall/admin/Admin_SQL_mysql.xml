<?xml version="1.0" encoding="UTF-8"?><!--Converted at: Wed May 11 15:49:38 KST 2016-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="AdminDAO">

	<!-- TB_USER 체크 -->
	<!-- APP110.DG_HASH 사용불가 -->
	<select id="userExistenceChk" parameterType="map" resultType="Integer">
	<![CDATA[
		SELECT CONCAT('',COUNT(*)) CNT
		FROM (
			SELECT
			     USER_ID
			    ,USER_NAME
			    ,PASSWORD
			    ,USER_GRADE
			    ,USER_TYPE
			    ,EMAIL
			FROM DB_HOMEPAGE.HP_USER
			UNION ALL
			SELECT
			     LGN_ID USER_ID
			    ,USER_NM USER_NAME
			    ,PWD PASSWORD
			    ,RTNG_CD USER_GRADE
			    ,'1' USER_TYPE
			    ,EMIL_ADDR EMAIL
			FROM DB_HOMEPAGE.TB_USER
			WHERE RTNG_CD>'010'
			AND USE_YN='Y'
        ) us
		WHERE 	USER_ID		= #{user_id}
		AND 	PASSWORD	= #{password}
		ORDER BY USER_GRADE DESC
	]]>
	<!--
	
		AND 	PASSWORD = #{password}
	-->
	</select>
	<!-- 패스워드 불일치시 업데이트 -->
	<update id="pwFailedCountUpdate" parameterType="map">
			UPDATE DB_HOMEPAGE.HP_USER
			SET SOCIAL_ID = CONCAT((COALESCE(CAST(SOCIAL_ID AS DECIMAL(10,0)), 0)  + 1))
			
			<!--SET SOCIAL_ID = SOCIAL_ID + 1 --> 
			WHERE USER_ID = #{user_id}
	</update>
	<!-- 로그인시 패스워드 불일치 초기화  -->
 	<update id="passwordCountCheckInitialize" parameterType='String'>
		UPDATE DB_HOMEPAGE.HP_USER
		SET SOCIAL_ID = '0'
		WHERE USER_ID = #{USER_ID} 	
 	</update>
	<!-- 패스워드 불일치 횟수 체크 -->
	<select id="pwFailedCountSelect" parameterType="map" resultType="Integer">
		<![CDATA[
			SELECT SOCIAL_ID
			FROM DB_HOMEPAGE.HP_USER 
			WHERE USER_ID = #{user_id}
  		]]>
	</select>
	<!-- HP_USER 체크 -->
	<select id="userLoginChk" parameterType="map" resultType="Integer">
	<![CDATA[
		SELECT COUNT(0)
		FROM DB_HOMEPAGE.HP_USER
 		WHERE USER_ID = #{user_id}
	]]>
	</select>
	<!-- TB_USER 세션 -->
	<select id="TBUserSession" parameterType="map" resultType="hashmap">
	<![CDATA[
		SELECT
			 USER_ID
			,USER_NAME
			,USER_GRADE
			,POST_CD
			,USER_TYPE
			,EMAIL
		FROM (
			SELECT 
	       		 USER_ID
				,USER_NAME
	      		,PASSWORD
				,USER_GRADE
				,USER_DEPT POST_CD
				,USER_TYPE
				,EMAIL
      		from DB_HOMEPAGE.HP_USER WHERE USER_ID='110admin'
      		UNION ALL
			SELECT
			     LGN_ID USER_ID
			    ,USER_NM USER_NAME
			    ,PWD PASSWORD
			    ,RTNG_CD USER_GRADE
			    ,TEAM_CD POST_CD
			    ,'1' USER_TYPE
			    ,EMIL_ADDR EMAIL
			FROM DB_HOMEPAGE.TB_USER
			WHERE RTNG_CD>'010'
			AND USE_YN='Y'
		) t
		WHERE USER_ID		= #{user_id}
		AND 	PASSWORD	= #{password}
	]]>
	<!--
 		AND PASSWORD = #{password}
	-->
	</select>
	<!-- HP_USER 세션 -->
	<select id="HPUserSession" parameterType="map" resultType="hashmap">
		SELECT
		<if test="user_id == 'admin'">
			USER_TYPE,
			'1' CONSULT_AUTH,
			'1' BODO_AUTH,
			'1' NOTICE_AUTH,
			'1' PROMOTION_AUTH,
			'1' PHOTO_AUTH,
			'1' FREEBOARD_AUTH,
			'1' CONTEST_AUTH,
			'1' FAQ_AUTH,
			'1' STORY110_AUTH,
			'1' POPUP_AUTH,
			'1' POPUPZONE_AUTH,
			'1' BANNER_AUTH,
			'1' MOBILEVISITOR_AUTH,
			'1' INTELIGENCE_AUTH,
			'1' CODE_AUTH
		</if>
		<if test="user_id != 'admin'">
			USER_TYPE,
			<!--SUBSTR((select pwd_amnt_dttm from app110.tb_user where lgn_id=#{user_id}),0,8) AS -->
			PASSWORD_DATE,
			CONSULT_AUTH,
			BODO_AUTH,
			NOTICE_AUTH,
			PROMOTION_AUTH,
			PHOTO_AUTH,
			FREEBOARD_AUTH,
			CONTEST_AUTH,
			FAQ_AUTH,
			STORY110_AUTH,
			POPUP_AUTH,
			POPUPZONE_AUTH,
			BANNER_AUTH,
			MOBILEVISITOR_AUTH,
			INTELIGENCE_AUTH,
			CODE_AUTH
		</if>
		FROM DB_HOMEPAGE.HP_USER
		WHERE USER_ID = #{user_id}
 		<if test="user_id != 'admin'">
			AND USE_YN='Y'
		</if>
	</select>

	<!-- sjs 수정부분 -->
	<!-- 탑메뉴가져오기 -->
<!-- 	<select id="commonMenuTopSelect" parameterType="map" resultType="hashmap">
		<![CDATA[
			SELECT
			     MENU_ID
			    ,MENU_NAME
			    ,MENU_POP_YN
			    ,MENU_POP_SIZE
			    ,MENU_IMG
			    ,(SELECT
			    	COUNT(*)
			      FROM DB_HOMEPAGE.HP_MENU
			      WHERE PARENT_ID=A.MENU_ID) SIDE_MENU_YN
			FROM DB_HOMEPAGE.HP_MENU A
			WHERE 	MENU_USE_YN	= '1'
			AND		MENU_LEVEL	= '1'
			AND 	MENU_GUBUN	= #{MENU_GUBUN}
			ORDER BY A.MENU_SORT
		]]>
	</select> -->

	<!-- 방문자수 -->
	<!-- TO_CHAR 및  TO_DATE 함수 사용 불가-->
	<select id="statConnectCount" parameterType="map" resultType="hashmap">
		<![CDATA[
			SELECT
			     CONCAT(SUBSTR(A.CONNECT_DATE,1,4),'-'
			     ,SUBSTR(A.CONNECT_DATE,5,2),'-'
			     ,SUBSTR(A.CONNECT_DATE,7,2)) CONNECT_DATE
			    , CASE WEEKDAY(DATE_FORMAT(CONNECT_DATE, '%Y%m%d'))
					WHEN '6' THEN '일요일'
					WHEN '0' THEN '월요일'
					WHEN '1' THEN '화요일'
					WHEN '2' THEN '수요일'
					WHEN '3' THEN '목요일'
					WHEN '4' THEN '금요일'
					WHEN '5' THEN '토요일'
					END AS YOIL
			    ,CONNECT_TIME
			    ,CONNECT_CNT
			FROM DB_HOMEPAGE.HP_STATS A
			WHERE CONNECT_DATE BETWEEN REPLACE(#{START_DATE},'-','') AND REPLACE(#{END_DATE},'-','')
			ORDER BY CONNECT_DATE DESC,CONNECT_TIME DESC
		]]>
	</select>

	<!-- 방문자수(일별) -->
	<!-- TO_CHAR 및  TO_DATE 함수 사용 불가-->
	<select id="statConnectCountSum" parameterType="map" resultType="hashmap">
		<![CDATA[
			SELECT
			     CONCAT(SUBSTR(A.CONNECT_DATE,1,4),'-'
			     ,SUBSTR(A.CONNECT_DATE,5,2),'-'
			     ,SUBSTR(A.CONNECT_DATE,7,2)) CONNECT_DATE
			      , CASE WEEKDAY(DATE_FORMAT(A.CONNECT_DATE, '%Y%m%d'))
					WHEN '6' THEN '일요일'
					WHEN '0' THEN '월요일'
					WHEN '1' THEN '화요일'
					WHEN '2' THEN '수요일'
					WHEN '3' THEN '목요일'
					WHEN '4' THEN '금요일'
					WHEN '5' THEN '토요일'
					END AS YOIL
			    ,SUM(CONNECT_CNT) CONNECT_CNT
			FROM DB_HOMEPAGE.HP_STATS A
			WHERE CONNECT_DATE BETWEEN REPLACE(#{START_DATE},'-','') AND REPLACE(#{END_DATE},'-','')
			GROUP BY CONNECT_DATE
			ORDER BY CONNECT_DATE DESC
		]]>
	</select>

	<!-- 방문자수(월별) -->
	<select id="statConnectMonthSum" parameterType="map" resultType="hashmap">
		<![CDATA[
			SELECT
			     CONCAT(SUBSTR(CONNECT_DATE,1,4),'-',SUBSTR(CONNECT_DATE,5,2)) CONNECT_DATE
			    ,'-' YOIL
			    ,SUM(CONNECT_CNT) CONNECT_CNT
			FROM (
				SELECT
				        SUBSTR(CONNECT_DATE,1,6) CONNECT_DATE
				        ,CONNECT_CNT
				FROM DB_HOMEPAGE.HP_STATS
				WHERE SUBSTR(CONNECT_DATE,1,6) BETWEEN REPLACE(#{START_MONTH},'-','') AND REPLACE(#{END_MONTH},'-','')
			) T
			GROUP BY CONNECT_DATE
			ORDER BY CONNECT_DATE DESC
		]]>
	</select>

 	<!--서브 관리자 등록 -->
 	<insert id='subManagerInsert' parameterType='String'>
 	<![CDATA[
		INSERT INTO DB_HOMEPAGE.HP_USER (
			USER_ID,
			USER_NAME,
			PASSWORD,
			SOCIAL_ID,
			USER_TYPE,
			USER_GRADE,
			USE_YN,
			JOIN_DATE,
			RETIRE_DATE,
			HOME_TEL_NO,
			MOBILE_TEL_NO,
			EMAIL,
			ZIPCODE,
			ADDRESS,
			BIRTHDAY,
			LOGIN_YN,
			LOGIN_DATE,
			LOGIN_TIME,
			LOGOUT_DATE,
			LOGOUT_TIME,
			PASSWORD_DATE,
			USER_DEPT,
			CONSULT_AUTH,
			BODO_AUTH,
			NOTICE_AUTH,
			PROMOTION_AUTH,
			PHOTO_AUTH,
			FREEBOARD_AUTH,
			CONTEST_AUTH,
			FAQ_AUTH,
			STORY110_AUTH,
			POPUP_AUTH,
			POPUPZONE_AUTH,
			BANNER_AUTH,
			MOBILEVISITOR_AUTH,
			INTELIGENCE_AUTH,
			CODE_AUTH
		)
		SELECT
			LGN_ID USER_ID,
			USER_NM USER_NAME,
			PWD PASSWORD,
			'' SOCIAL_ID,
			'1' USER_TYPE,
			IFNULL(RTNG_CD,'') USER_GRADE,
			IFNULL(USE_YN,'') USE_YN,
			IFNULL(RGSN_DTTM,'') JOIN_DATE,
			'' RETIRE_DATE,
			'' HOME_TEL_NO,
			'' MOBILE_TEL_NO,
			IFNULL(EMIL_ADDR,'') EMAIL,
			'' ZIPCODE,
			'' ADDRESS,
			'' BIRTHDAY,
			'' LOGIN_YN,
			'' LOGIN_DATE,
			'' LOGIN_TIME,
			'' LOGOUT_DATE,
			'' LOGOUT_TIME,
			TO_CHAR(SYSDATE,'YYYYMMDD') PASSWORD_DATE,
			IFNULL(TEAM_CD,'') USER_DEPT,
			'0' CONSULT_AUTH,
			'0' BODO_AUTH,
			'0' NOTICE_AUTH,
			'0' PROMOTION_AUTH,
			'0' PHOTO_AUTH,
			'0' FREEBOARD_AUTH,
			'0' CONTEST_AUTH,
			'0' FAQ_AUTH,
			'0' STORY110_AUTH,
			'0' POPUP_AUTH,
			'0' POPUPZONE_AUTH,
			'0' BANNER_AUTH,
			'0' MOBILEVISITOR_AUTH,
			'1' INTELIGENCE_AUTH,
			'0' CODE_AUTH
		FROM
		   DB_HOMEPAGE.TB_USER
		WHERE LGN_ID = #{user_id}
	]]>
 	</insert>
 	
	<!-- 서브관리자 리스트 개수 -->
	<select id="subManagerListCount" parameterType='Map' resultType="Integer">
		SELECT COUNT(0)
		FROM DB_HOMEPAGE.HP_USER APP
		WHERE APP.USER_ID != 'admin'
		<if test="option == 1">
		AND  APP.USER_ID LIKE CONCAT('%',#{search},'%')
		</if>
		<if test="option == 2">
		AND  APP.USER_NAME LIKE CONCAT('%',#{search},'%')
		</if>
	</select>
	
	<!-- 서브관리자 리스트 -->
	<select id="subManagerList" parameterType='Map' resultType="HashMap">
		SELECT *
		FROM (
			SELECT
				ROW_NUMBER() OVER(ORDER BY APP.JOIN_DATE DESC) AS rn,
				IFNULL(APP.USER_ID,'') AS USER_ID,
				IFNULL(APP.USER_NAME,'') AS USER_NAME,
				IFNULL(APP.JOIN_DATE,'') AS JOIN_DATE,
				'1' USER_TYPE,
				IFNULL(APP.CONSULT_AUTH,'0') AS CONSULT_AUTH,
				IFNULL(APP.BODO_AUTH,'0') AS BODO_AUTH,
				IFNULL(APP.NOTICE_AUTH,'0') AS NOTICE_AUTH,
				IFNULL(APP.PROMOTION_AUTH,'0') AS PROMOTION_AUTH,
				IFNULL(APP.PHOTO_AUTH,'0') AS PHOTO_AUTH,
				IFNULL(APP.FREEBOARD_AUTH,'0') AS FREEBOARD_AUTH,
				IFNULL(APP.CONTEST_AUTH,'0') AS CONTEST_AUTH,
				IFNULL(APP.FAQ_AUTH,'0') AS FAQ_AUTH,
				IFNULL(APP.STORY110_AUTH,'0') AS STORY110_AUTH,
				IFNULL(APP.POPUP_AUTH,'0') AS POPUP_AUTH,
				IFNULL(APP.POPUPZONE_AUTH,'0') AS POPUPZONE_AUTH,
				IFNULL(APP.BANNER_AUTH,'0') AS BANNER_AUTH,
				IFNULL(APP.MOBILEVISITOR_AUTH,'0') AS MOBILEVISITOR_AUTH,
				IFNULL(APP.INTELIGENCE_AUTH,'0') AS INTELIGENCE_AUTH,
				IFNULL(APP.CODE_AUTH,'0') AS CODE_AUTH
				FROM DB_HOMEPAGE.HP_USER APP
				WHERE APP.USER_ID != 'admin'
				<if test="option == 1">
				AND  APP.USER_ID LIKE  CONCAT('%',#{search},'%')
				</if>
				<if test="option == 2">
				AND  APP.USER_NAME LIKE  CONCAT('%',#{search},'%')
				</if>
		)
		WHERE rn BETWEEN #{startlist} AND #{listsize}
	</select>
	<!-- 서브관리자 디테일 -->
	<select id="userDetail" parameterType='Map' resultType="HashMap">
		SELECT * FROM DB_HOMEPAGE.HP_USER
		WHERE USER_ID = #{user_id}
	</select>
 	<!--서브 관리자 업데이트 -->
 	<update id='subManagerUpdate' parameterType='map'>
		UPDATE DB_HOMEPAGE.HP_USER
		SET	CONSULT_AUTH = #{CONSULT_AUTH},
			BODO_AUTH = #{BODO_AUTH},
			NOTICE_AUTH = #{NOTICE_AUTH},
			PROMOTION_AUTH = #{PROMOTION_AUTH},
			PHOTO_AUTH = #{PHOTO_AUTH},
			FREEBOARD_AUTH = #{FREEBOARD_AUTH},
			CONTEST_AUTH = #{CONTEST_AUTH},
			FAQ_AUTH = #{FAQ_AUTH},
			STORY110_AUTH = #{STORY110_AUTH},
			POPUP_AUTH = #{POPUP_AUTH},
			POPUPZONE_AUTH = #{POPUPZONE_AUTH},
			BANNER_AUTH = #{BANNER_AUTH},
			MOBILEVISITOR_AUTH = #{MOBILEVISITOR_AUTH},
			INTELIGENCE_AUTH = #{INTELIGENCE_AUTH},
			CODE_AUTH = #{CODE_AUTH}
		WHERE USER_ID= #{USER_ID}
 	</update>
 	<!-- 30일 기간만료 비밀번호 변경 -->
 	<update id='expirationPwdUpd' parameterType='map'>

		UPDATE DB_HOMEPAGE.HP_USER
		SET
		<!--
			PASSWORD = #{PASSWORD},
		-->
			PASSWORD = #{PASSWORD},
			PASSWORD_DATE = #{appDate}
		WHERE USER_ID = #{USER_ID}
 	</update>
 	<update id='expirationPwdUpdTB' parameterType='map'>
		UPDATE DB_HOMEPAGE.TB_USER
		SET
		<!--
			PWD = #{PASSWORD},
		-->
			PWD = #{PASSWORD},
			PWD_AMNT_DTTM = #{app110Date}
		WHERE LGN_ID = #{USER_ID}
 	</update>
 	<!--로그인 날짜 변경 -->
 	<update id='loginDateUpdate' parameterType='map'>
		UPDATE DB_HOMEPAGE.HP_USER
		SET	LOGIN_DATE = #{LOGIN_DATE},
			LOGIN_TIME = #{LOGIN_TIME}
		WHERE USER_ID= #{USER_ID}
 	</update>
 	<!--로그아웃 날짜 변경 -->
 	<update id='logoutDateUpdate' parameterType='map'>
		UPDATE DB_HOMEPAGE.HP_USER
		SET	LOGOUT_DATE = #{LOGOUT_DATE},
			LOGOUT_TIME = #{LOGOUT_TIME}
		WHERE USER_ID= #{USER_ID}
 	</update>
 	
 	<select id="passwordFailedCountCheck" resultType="int">
        SELECT SOCIAL_ID
        FROM DB_HOMEPAGE.HP_USER
        WHERE user_id = #{user_id} AND password = #{SOCIAL_ID}
    </select>
 	
    
 	<insert id="lgnHstr2Insert" parameterType="egovframework.gcall.dto.LgnHistoryDTO2">
		 INSERT INTO DB_HOMEPAGE.HP_LGN_HSTR2 (
		 	LGN_HSTR_ID, USER_ID, IP_ADDR, RGSN_DTTM, STATUS, PROCESS_URI
		 )
		 VALUES (
		 	#{LGN_HSTR_ID}, #{USER_ID}, #{IP_ADDR}, DATE_FORMAT(NOW(),'%Y%m%d%H%i%s'), #{STATUS}, #{PROCESS_URI}
		 )
 	</insert>
 	
</mapper>